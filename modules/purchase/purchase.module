<?php

// alter user form
function purchase_form_user_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
    $form['actions']['submit']['#submit'][] = '_update_user';
    $form['field_last_payment_money']['widget'][0]['value']['#default_value'] = 0;
}

function _update_user(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
    $user_id = $form_state->getValue('uid');
    $last_payment_money = $form_state->getValue('field_last_payment_money')[0]['value'];

    if (isset($last_payment_money) && $last_payment_money > 0) {
        $user_storage = \Drupal::entityManager()->getStorage('user');
        $user = $user_storage->load($user_id);
        $payment_money = $user->field_payment_money->value;
        $debt = $user->field_debt->value;
        $total_money = $user->field_total_money->value;

        // update payment money
        if (isset($payment_money)) {
            $payment_money += $last_payment_money;
        } else {
            $payment_money = $last_payment_money;
        }
        // update debt money
        $debt = $total_money - $payment_money;

        // assign to fields and save to db
        $user->field_payment_money->value = $payment_money;
        $user->field_debt->value = $debt;
        $user_storage->save($user);
    }
}

// alter facebook product node form
function purchase_form_node_facebook_product_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    $form['actions']['submit']['#submit'][] = '_insert_purchased_product';
    $form['actions']['publish']['#submit'][] = '_insert_purchased_product';
    $form['actions']['unpublish']['#submit'][] = '_insert_purchased_product';
}

function purchase_form_node_facebook_product_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    $form['actions']['submit']['#submit'][] = '_update_purchased_product';
    $form['actions']['publish']['#submit'][] = '_update_purchased_product';
    $form['actions']['unpublish']['#submit'][] = '_update_purchased_product';
}

function _insert_purchased_product(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
    //$nids = db_select('node', 'e')->fields('e', array('nid'))->orderBy('nid', 'DESC')->execute()->fetchAll();
    //$product_id = $nids[0]->nid;
    $product_id = $form_state->getValue('nid');
    $quantity = $form_state->getValue('field_quantity')[0]['value'];
    $price = $form_state->getValue('field_price')[0]['value'];
    //$image_links = $form_state->getValue('field_image_links')[0]['uri'];
    $customer_id = $form_state->getValue('field_customer')[0]['target_id'];
    $note = $form_state->getValue('body')[0]['value'];
    $status_id = $form_state->getValue('field_status')[0]['target_id'];
    $total_price = $price * $quantity;
    $user_storage = \Drupal::entityManager()->getStorage('user');
    $customer = \Drupal\user\Entity\User::load($customer_id);

    // update user
    if ($status_id != 3) {
        if (!isset($customer->field_total_money->value)) {
            $customer->field_total_money->value = $total_price;
        } else {
            $customer->field_total_money->value += $total_price;
        }
        /*
        if (!isset($customer->field_payment_money->value)) {
            $customer->field_payment_money->value = 0;
        }
        */
        $customer->field_debt->value = $customer->field_total_money->value - $customer->field_payment_money->value;
        $user_storage->save($customer);
    }

    // insert new row
    $fields = array(
        'product_id' => $product_id,
        'user_id' => $customer_id,
        'quantity' => $quantity,
        'price' => $price,
        'total_price' => $total_price,
        //'image_url' => $image_links,
        'status' => $status_id,
        'note' => $note,
        'date' => time()
    );
    db_insert('product_user_relationship')->fields($fields)->execute();

    $form_state->setRedirectUrl(\Drupal\Core\Url::fromUserInput('/node/add/facebook_product'));
}

function _update_purchased_product(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
    //$nids = db_select('node', 'e')->fields('e', array('nid'))->orderBy('nid', 'DESC')->execute()->fetchAll();
    //$product_id = $nids[0]->nid;
    $product_id = $form_state->getValue('nid');
    $quantity = $form_state->getValue('field_quantity')[0]['value'];
    $price = $form_state->getValue('field_price')[0]['value'];
    //$image_links = $form_state->getValue('field_image_links')[0]['uri'];
    $customer_id = $form_state->getValue('field_customer')[0]['target_id'];
    $note = $form_state->getValue('body')[0]['value'];
    $status_id = $form_state->getValue('field_status')[0]['target_id'];
    $total_price = $price * $quantity;
    $user_storage = \Drupal::entityManager()->getStorage('user');
    $customer = \Drupal\user\Entity\User::load($customer_id);

    $query = db_select('product_user_relationship', 'e')
        ->condition('product_id', $product_id)
        ->fields('e', array('status', 'total_price'))
        ->execute()->fetchAll();
    $old_product = $query[0];
    $old_total_price = $old_product->total_price;
    $old_status_id = $old_product->status;

    // update user
    if ($old_status_id != 3) {
        if (isset($customer->field_total_money->value)) {
            $customer->field_total_money->value -= $old_total_price;
        }
    }
    if ($status_id != 3) {
        $customer->field_total_money->value += $total_price;
    }
    $customer->field_debt->value = $customer->field_total_money->value - $customer->field_payment_money->value;
    $user_storage->save($customer);

    // insert new row
    $fields = array(
        'quantity' => $quantity,
        'price' => $price,
        'total_price' => $total_price,
        //'image_url' => $image_links,
        'status' => $status_id,
        'note' => $note,
    );
    db_update('product_user_relationship')
        ->condition('product_id', $product_id)
        ->fields($fields)
        ->execute();

    $form_state->setRedirectUrl(\Drupal\Core\Url::fromUserInput('/node/add/facebook_product'));
}

/**
 * Implements hook_block_access().
 */
function purchase_block_access(\Drupal\block\Entity\Block $block, $operation, \Drupal\Core\Session\AccountInterface $account) {
    if ($block->getPluginId() == 'system_menu_block:customer-menu' && $operation == 'view') {
        $roles = $account->getRoles();
        if (in_array('administrator', $roles)) {
            return \Drupal\Core\Access\AccessResult::forbidden();
        }
    }

    return \Drupal\Core\Access\AccessResult::neutral();
}

/**
 * Implements hook_user_login().
 */
function purchase_user_login($account) {
    global $base_path;

    $roles = $account->getRoles();
    if (in_array('administrator', $roles)) {
        $response = new \Symfony\Component\HttpFoundation\RedirectResponse($base_path . "products");
        $response->send();
    } else if (in_array('authenticated', $roles)) {
        $response = new \Symfony\Component\HttpFoundation\RedirectResponse($base_path . "user/general");
        $response->send();
    } else {
        //$response = new \Symfony\Component\HttpFoundation\RedirectResponse($base_path . "user/login");
    }
    return;
}

function purchase_theme() {
    return array(
        'create_multiple_products' => array(
            'variables' => array(),
            'template' => 'create-multiple-products',
        ),
    );
}